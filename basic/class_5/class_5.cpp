// class_5.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
// 重载运算符

#include "pch.h"
#include <iostream>
#include "Time.h"
int main()
{
	//一 重载运算符
	//Time time1;
	//Time time2;
	//if (time1 == time2)  //编译报错
	//{

	//}

	//两个对象真的不能比较吗，是可以比较的，我们需要“重载==运算符”
	//说白了，我们要写一个成员函数，这个成员函数名 “operator==”, 这个函数体里面，我们要写一些比较逻辑

	//正式总结一下：
	//重载运算符，本质上是一个函数。整个函数的名字：operator关键字 接 运算符
	//既然重载运算符本质上是一个函数，那么会有返回类型和参数列表
	//有一些运算符，如果我们不自己写 改运算符的重载，那么系统会自动给我们生成一个。比如赋值运算符的重载
	//time2 = time1;


	//二 拷贝赋值运算符
	Time myTime;  //调用了构造函数
	Time myTime2 = myTime; //调用了拷贝构造函数
	Time myTime5 = { myTime }; //调用了拷贝构造函数

	Time myTime6; 
	myTime6 = myTime5; //这个是赋值运算符，既没有调用构造函数，也没有调用拷贝构造函数
	//重载赋值运算符：有返回类型和参数列表，这里的参数就表示运算符的运算对象。比如myTime5就是运算对象
	//myTime6就是this对象。myTime5就是operator=里面的参数

	//三 析构函数 
	//相对于构造函数，对象在销毁的时候，会自动调用析构函数
	//如果不自己定义析构函数，编译器也会生成一个默认的析构函数，函数体为空{}

	//new/delete 构造函数new出来的，需要在析构函数中销毁


    std::cout << "Hello World!\n"; 
}

